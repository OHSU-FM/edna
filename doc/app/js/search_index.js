var search_data = {"index":{"searchIndex":["ability","applicationcontroller","cancan","applicationhelper","chart","chartseries","chartscontroller","concerns","p4residentresponse","contentslug","dashboard","dashboardcontroller","dashboardhelper","dashboardwidget","dashboardwidgetscontroller","ednaconsole","application","arextensions","activerecordimport","graduateresponsemixin","p4continuityclinicresponsemixin","p4residencyprogramresponsemixin","residentresponsemixin","dashboardlib","collisiondetector","errors","datamaker","railsadmin","p4coretablesmixin","surveyresponsemixin","homehelper","metaattribute","metaattributeentity","metaattributeentitygroup","metaattributequestion","metaattributestatistic","metaattributevalue","p4clinic","p4program","p4resident","p4residentclinic","railsadmin","config","actions","refresh","reportscontroller","reportshelper","settings","statscontroller","statshelper","unexplainedversion","user","version","versionexplanation","versionnote","y1continuityclinic","y1graduateresponse","y1residencyprogram","y1residentresponse","y2continuityclinic","y2graduateresponse","y2residencyprogram","y2residentresponse","y3continuityclinic","y3graduateresponse","y3residencyprogram","y3residentresponse","y4continuityclinic","y4graduateresponse","y4residencyprogram","y4residentresponse","y5continuityclinic","y5graduateresponse","y5residencyprogram","y5residentresponse","y6graduateresponse","y7graduateresponse","aggregator_type_enum()","belongs_to_keys()","category_filter=()","category_filter_enum()","chart_type_enum()","chart_type_name()","colorize()","colorize()","colorize_span()","cols()","cols_enum()","cols_for_group()","content()","controller_javascript_include_tag()","controller_stylesheet_link_tag()","convert_record_list()","coord_to_pos()","create()","create()","create()","data_maker()","dataset()","dataset()","destroy()","edit()","entities()","entities_for_group()","entity_filter()","entity_filter_enum()","entity_groups_enum()","entity_type_enum()","entity_type_fk_enum()","errors_for()","fk_join_arr()","flash_class()","freshly_created?()","generate_dataset()","get_color()","get_file_map()","get_title()","get_type_for_year()","group_filter=()","group_filter_enum()","group_name()","group_query_builder()","groups()","has_stats_view()","import!()","index()","index()","index()","index()","indexes_of()","instrument()","iso_query_builder()","link_to_stats()","load_extensions()","load_extensions()","mark_as_freshly_created()","meta_attribute_questions()","model()","multi_query_builder()","name()","name()","name()","nav_link_to()","new()","new()","new()","new()","new()","p4_program_id_enum()","p4_program_id_required?()","parent_group()","parent_table_enum()","parent_table_pk_enum()","percent_bar()","pk_join_arr()","pos_to_coord()","position()","public_file_path()","q_columns()","query_type()","query_type_enum()","query_type_str()","question_details()","question_filter=()","question_filter_enum()","questions()","questions_for_entity()","questions_for_group()","ready_for_data?()","reference_year_enum()","register_rectangle()","roles_enum()","rows()","rows_enum()","select_arr()","serializable_hash()","set_indecies()","show()","show()","show()","show()","show_stats()","show_widget()","status_classes()","table_names()","theme()","theme_enum()","title()","title()","title()","title()","translate()","update()","update()","update()","validate_max_number_of_groups()","validate_table_and_pk()","validate_table_and_pk()","validate_widget_positions()","widget_id_enum()","widget_type_enum()","readme","guides","rails"],"longSearchIndex":["ability","applicationcontroller","applicationcontroller::cancan","applicationhelper","chart","chartseries","chartscontroller","concerns","concerns::p4residentresponse","contentslug","dashboard","dashboardcontroller","dashboardhelper","dashboardwidget","dashboardwidgetscontroller","ednaconsole","ednaconsole::application","ednaconsole::arextensions","ednaconsole::arextensions::activerecordimport","ednaconsole::arextensions::graduateresponsemixin","ednaconsole::arextensions::p4continuityclinicresponsemixin","ednaconsole::arextensions::p4residencyprogramresponsemixin","ednaconsole::arextensions::residentresponsemixin","ednaconsole::dashboardlib","ednaconsole::dashboardlib::collisiondetector","ednaconsole::dashboardlib::errors","ednaconsole::datamaker","ednaconsole::railsadmin","ednaconsole::railsadmin::p4coretablesmixin","ednaconsole::railsadmin::surveyresponsemixin","homehelper","metaattribute","metaattribute::metaattributeentity","metaattribute::metaattributeentitygroup","metaattribute::metaattributequestion","metaattribute::metaattributestatistic","metaattribute::metaattributevalue","p4clinic","p4program","p4resident","p4residentclinic","railsadmin","railsadmin::config","railsadmin::config::actions","railsadmin::config::actions::refresh","reportscontroller","reportshelper","settings","statscontroller","statshelper","unexplainedversion","user","version","versionexplanation","versionnote","y1continuityclinic","y1graduateresponse","y1residencyprogram","y1residentresponse","y2continuityclinic","y2graduateresponse","y2residencyprogram","y2residentresponse","y3continuityclinic","y3graduateresponse","y3residencyprogram","y3residentresponse","y4continuityclinic","y4graduateresponse","y4residencyprogram","y4residentresponse","y5continuityclinic","y5graduateresponse","y5residencyprogram","y5residentresponse","y6graduateresponse","y7graduateresponse","chart#aggregator_type_enum()","metaattribute::metaattributeentity#belongs_to_keys()","chartseries#category_filter=()","chartseries#category_filter_enum()","chart#chart_type_enum()","chart#chart_type_name()","reportshelper#colorize()","statshelper#colorize()","reportshelper#colorize_span()","chart#cols()","chart#cols_enum()","ednaconsole::datamaker#cols_for_group()","dashboardwidget#content()","applicationhelper#controller_javascript_include_tag()","applicationhelper#controller_stylesheet_link_tag()","ednaconsole::arextensions::activerecordimport::convert_record_list()","ednaconsole::dashboardlib::collisiondetector#coord_to_pos()","chartscontroller#create()","dashboardcontroller#create()","dashboardwidgetscontroller#create()","chart#data_maker()","chart#dataset()","ednaconsole::datamaker#dataset()","chartscontroller#destroy()","chartscontroller#edit()","ednaconsole::datamaker#entities()","ednaconsole::datamaker#entities_for_group()","chartseries#entity_filter()","chartseries#entity_filter_enum()","metaattribute::metaattributeentity::entity_groups_enum()","metaattribute::metaattributeentity#entity_type_enum()","metaattribute::metaattributeentity#entity_type_fk_enum()","statshelper#errors_for()","ednaconsole::datamaker#fk_join_arr()","applicationhelper#flash_class()","dashboardwidget#freshly_created?()","ednaconsole::datamaker#generate_dataset()","reportshelper#get_color()","reportscontroller#get_file_map()","chart#get_title()","reportscontroller#get_type_for_year()","chartseries#group_filter=()","chartseries#group_filter_enum()","metaattribute::metaattributeentity#group_name()","ednaconsole::datamaker#group_query_builder()","ednaconsole::datamaker#groups()","reportshelper#has_stats_view()","ednaconsole::arextensions::activerecordimport::import!()","chartscontroller#index()","dashboardcontroller#index()","reportscontroller#index()","statscontroller#index()","ednaconsole::dashboardlib::collisiondetector#indexes_of()","reportscontroller#instrument()","ednaconsole::datamaker#iso_query_builder()","reportshelper#link_to_stats()","ednaconsole::arextensions::load_extensions()","ednaconsole::railsadmin::load_extensions()","dashboardwidget#mark_as_freshly_created()","chartseries#meta_attribute_questions()","metaattribute::metaattributeentity#model()","ednaconsole::datamaker#multi_query_builder()","metaattribute::metaattributeentity#name()","metaattribute::metaattributequestion#name()","version#name()","applicationhelper#nav_link_to()","ability::new()","chartscontroller#new()","dashboardwidgetscontroller#new()","ednaconsole::dashboardlib::collisiondetector::new()","ednaconsole::datamaker::new()","user#p4_program_id_enum()","user#p4_program_id_required?()","metaattribute::metaattributeentitygroup#parent_group()","metaattribute::metaattributeentitygroup#parent_table_enum()","metaattribute::metaattributeentitygroup#parent_table_pk_enum()","reportshelper#percent_bar()","ednaconsole::datamaker#pk_join_arr()","ednaconsole::dashboardlib::collisiondetector#pos_to_coord()","dashboardwidget#position()","applicationhelper#public_file_path()","ednaconsole::datamaker#q_columns()","ednaconsole::datamaker#query_type()","ednaconsole::datamaker#query_type_enum()","ednaconsole::datamaker#query_type_str()","ednaconsole::datamaker#question_details()","chartseries#question_filter=()","chartseries#question_filter_enum()","chart#questions()","ednaconsole::datamaker#questions_for_entity()","ednaconsole::datamaker#questions_for_group()","chartseries#ready_for_data?()","metaattribute::metaattributeentity#reference_year_enum()","ednaconsole::dashboardlib::collisiondetector#register_rectangle()","user#roles_enum()","chart#rows()","chart#rows_enum()","ednaconsole::datamaker#select_arr()","chart#serializable_hash()","ednaconsole::dashboardlib::collisiondetector#set_indecies()","chartscontroller#show()","dashboardcontroller#show()","reportscontroller#show()","statscontroller#show()","statshelper#show_stats()","dashboardwidgetscontroller#show_widget()","dashboardwidget#status_classes()","ednaconsole::datamaker#table_names()","dashboard#theme()","dashboard#theme_enum()","metaattribute::metaattributeentitygroup#title()","p4clinic#title()","p4program#title()","user#title()","metaattribute::metaattributeentity#translate()","chartscontroller#update()","dashboardcontroller#update()","dashboardwidgetscontroller#update()","chart#validate_max_number_of_groups()","metaattribute::metaattributeentity#validate_table_and_pk()","metaattribute::metaattributeentitygroup#validate_table_and_pk()","dashboard#validate_widget_positions()","dashboardwidget#widget_id_enum()","dashboardwidget#widget_type_enum()","","",""],"info":[["Ability","","Ability.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationController::CanCan","","ApplicationController/CanCan.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Chart","","Chart.html","",""],["ChartSeries","","ChartSeries.html","",""],["ChartsController","","ChartsController.html","",""],["Concerns","","Concerns.html","",""],["Concerns::P4ResidentResponse","","Concerns/P4ResidentResponse.html","",""],["ContentSlug","","ContentSlug.html","",""],["Dashboard","","Dashboard.html","",""],["DashboardController","","DashboardController.html","",""],["DashboardHelper","","DashboardHelper.html","",""],["DashboardWidget","","DashboardWidget.html","",""],["DashboardWidgetsController","","DashboardWidgetsController.html","",""],["EdnaConsole","","EdnaConsole.html","",""],["EdnaConsole::Application","","EdnaConsole/Application.html","",""],["EdnaConsole::ArExtensions","","EdnaConsole/ArExtensions.html","",""],["EdnaConsole::ArExtensions::ActiveRecordImport","","EdnaConsole/ArExtensions/ActiveRecordImport.html","",""],["EdnaConsole::ArExtensions::GraduateResponseMixin","","EdnaConsole/ArExtensions/GraduateResponseMixin.html","",""],["EdnaConsole::ArExtensions::P4ContinuityClinicResponseMixin","","EdnaConsole/ArExtensions/P4ContinuityClinicResponseMixin.html","",""],["EdnaConsole::ArExtensions::P4ResidencyProgramResponseMixin","","EdnaConsole/ArExtensions/P4ResidencyProgramResponseMixin.html","",""],["EdnaConsole::ArExtensions::ResidentResponseMixin","","EdnaConsole/ArExtensions/ResidentResponseMixin.html","",""],["EdnaConsole::DashboardLib","","EdnaConsole/DashboardLib.html","",""],["EdnaConsole::DashboardLib::CollisionDetector","","EdnaConsole/DashboardLib/CollisionDetector.html","","<p>Creates a 2d array and maps items of different sizes to them\n<p>Used to ensure proper placement of desktop …\n\n"],["EdnaConsole::DashboardLib::Errors","","EdnaConsole/DashboardLib/Errors.html","","<p>Collision Detector Errors\n"],["EdnaConsole::DataMaker","","EdnaConsole/DataMaker.html","","<p>Class: DataMaker\n<p>The DataMaker class is an SQL query generator that is used to create\ndatasets that are …\n"],["EdnaConsole::RailsAdmin","","EdnaConsole/RailsAdmin.html","",""],["EdnaConsole::RailsAdmin::P4CoreTablesMixin","","EdnaConsole/RailsAdmin/P4CoreTablesMixin.html","",""],["EdnaConsole::RailsAdmin::SurveyResponseMixin","","EdnaConsole/RailsAdmin/SurveyResponseMixin.html","",""],["HomeHelper","","HomeHelper.html","",""],["MetaAttribute","","MetaAttribute.html","",""],["MetaAttribute::MetaAttributeEntity","","MetaAttribute/MetaAttributeEntity.html","",""],["MetaAttribute::MetaAttributeEntityGroup","","MetaAttribute/MetaAttributeEntityGroup.html","",""],["MetaAttribute::MetaAttributeQuestion","","MetaAttribute/MetaAttributeQuestion.html","",""],["MetaAttribute::MetaAttributeStatistic","","MetaAttribute/MetaAttributeStatistic.html","",""],["MetaAttribute::MetaAttributeValue","","MetaAttribute/MetaAttributeValue.html","",""],["P4Clinic","","P4Clinic.html","",""],["P4Program","","P4Program.html","",""],["P4Resident","","P4Resident.html","",""],["P4ResidentClinic","","P4ResidentClinic.html","",""],["RailsAdmin","","RailsAdmin.html","",""],["RailsAdmin::Config","","RailsAdmin/Config.html","",""],["RailsAdmin::Config::Actions","","RailsAdmin/Config/Actions.html","",""],["RailsAdmin::Config::Actions::Refresh","","RailsAdmin/Config/Actions/Refresh.html","",""],["ReportsController","","ReportsController.html","",""],["ReportsHelper","","ReportsHelper.html","",""],["Settings","","Settings.html","",""],["StatsController","","StatsController.html","",""],["StatsHelper","","StatsHelper.html","",""],["UnexplainedVersion","","UnexplainedVersion.html","",""],["User","","User.html","",""],["Version","","Version.html","",""],["VersionExplanation","","VersionExplanation.html","",""],["VersionNote","","VersionNote.html","",""],["Y1ContinuityClinic","","Y1ContinuityClinic.html","",""],["Y1GraduateResponse","","Y1GraduateResponse.html","",""],["Y1ResidencyProgram","","Y1ResidencyProgram.html","",""],["Y1ResidentResponse","","Y1ResidentResponse.html","",""],["Y2ContinuityClinic","","Y2ContinuityClinic.html","",""],["Y2GraduateResponse","","Y2GraduateResponse.html","",""],["Y2ResidencyProgram","","Y2ResidencyProgram.html","",""],["Y2ResidentResponse","","Y2ResidentResponse.html","",""],["Y3ContinuityClinic","","Y3ContinuityClinic.html","",""],["Y3GraduateResponse","","Y3GraduateResponse.html","",""],["Y3ResidencyProgram","","Y3ResidencyProgram.html","",""],["Y3ResidentResponse","","Y3ResidentResponse.html","",""],["Y4ContinuityClinic","","Y4ContinuityClinic.html","",""],["Y4GraduateResponse","","Y4GraduateResponse.html","",""],["Y4ResidencyProgram","","Y4ResidencyProgram.html","",""],["Y4ResidentResponse","","Y4ResidentResponse.html","",""],["Y5ContinuityClinic","","Y5ContinuityClinic.html","",""],["Y5GraduateResponse","","Y5GraduateResponse.html","",""],["Y5ResidencyProgram","","Y5ResidencyProgram.html","",""],["Y5ResidentResponse","","Y5ResidentResponse.html","",""],["Y6GraduateResponse","","Y6GraduateResponse.html","",""],["Y7GraduateResponse","","Y7GraduateResponse.html","",""],["aggregator_type_enum","Chart","Chart.html#method-i-aggregator_type_enum","()",""],["belongs_to_keys","MetaAttribute::MetaAttributeEntity","MetaAttribute/MetaAttributeEntity.html#method-i-belongs_to_keys","()",""],["category_filter=","ChartSeries","ChartSeries.html#method-i-category_filter-3D","(val)","<p>clear other values if we are changed\n"],["category_filter_enum","ChartSeries","ChartSeries.html#method-i-category_filter_enum","()",""],["chart_type_enum","Chart","Chart.html#method-i-chart_type_enum","()",""],["chart_type_name","Chart","Chart.html#method-i-chart_type_name","()",""],["colorize","ReportsHelper","ReportsHelper.html#method-i-colorize","(n, low, high)",""],["colorize","StatsHelper","StatsHelper.html#method-i-colorize","(n, low, high)",""],["colorize_span","ReportsHelper","ReportsHelper.html#method-i-colorize_span","(n, low, high)",""],["cols","Chart","Chart.html#method-i-cols","()",""],["cols_enum","Chart","Chart.html#method-i-cols_enum","()","<p>Any listed question that is not in rows\n"],["cols_for_group","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-cols_for_group","(group)","<p>get all of the columns for this group\n"],["content","DashboardWidget","DashboardWidget.html#method-i-content","()",""],["controller_javascript_include_tag","ApplicationHelper","ApplicationHelper.html#method-i-controller_javascript_include_tag","()",""],["controller_stylesheet_link_tag","ApplicationHelper","ApplicationHelper.html#method-i-controller_stylesheet_link_tag","()","<p>very useful methods, improves caching efficiency and allows division of\ncontroller specific CSS/JS\n"],["convert_record_list","EdnaConsole::ArExtensions::ActiveRecordImport","EdnaConsole/ArExtensions/ActiveRecordImport.html#method-c-convert_record_list","(record_list)",""],["coord_to_pos","EdnaConsole::DashboardLib::CollisionDetector","EdnaConsole/DashboardLib/CollisionDetector.html#method-i-coord_to_pos","(col, row)","<p>get the position of this col and row\n"],["create","ChartsController","ChartsController.html#method-i-create","()",""],["create","DashboardController","DashboardController.html#method-i-create","()",""],["create","DashboardWidgetsController","DashboardWidgetsController.html#method-i-create","()",""],["data_maker","Chart","Chart.html#method-i-data_maker","()","<p>Create the datamaker object if it does not yet exist\n"],["dataset","Chart","Chart.html#method-i-dataset","()","<p>Access the dataset from the datamaker\n"],["dataset","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-dataset","()","<p>Create dataset or return a cached copy of it\n"],["destroy","ChartsController","ChartsController.html#method-i-destroy","()",""],["edit","ChartsController","ChartsController.html#method-i-edit","()",""],["entities","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-entities","()","<p>List all of the entities\n"],["entities_for_group","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-entities_for_group","(group)","<p>Get all of the entities for this group that we also have questions for\n"],["entity_filter","ChartSeries","ChartSeries.html#method-i-entity_filter","()",""],["entity_filter_enum","ChartSeries","ChartSeries.html#method-i-entity_filter_enum","()",""],["entity_groups_enum","MetaAttribute::MetaAttributeEntity","MetaAttribute/MetaAttributeEntity.html#method-c-entity_groups_enum","()",""],["entity_type_enum","MetaAttribute::MetaAttributeEntity","MetaAttribute/MetaAttributeEntity.html#method-i-entity_type_enum","()",""],["entity_type_fk_enum","MetaAttribute::MetaAttributeEntity","MetaAttribute/MetaAttributeEntity.html#method-i-entity_type_fk_enum","()",""],["errors_for","StatsHelper","StatsHelper.html#method-i-errors_for","(_attribute_name)",""],["fk_join_arr","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-fk_join_arr","()","<p>Variables for foreign key joins\n"],["flash_class","ApplicationHelper","ApplicationHelper.html#method-i-flash_class","(level)","<p>Flash message css classes for use with bootstrap\n"],["freshly_created?","DashboardWidget","DashboardWidget.html#method-i-freshly_created-3F","()",""],["generate_dataset","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-generate_dataset","()","<p>Re/Generate the dataset and convert/map the dataset to an array of arrays\nwith the column headers as …\n"],["get_color","ReportsHelper","ReportsHelper.html#method-i-get_color","(_i, _value = nil)",""],["get_file_map","ReportsController","ReportsController.html#method-i-get_file_map","()",""],["get_title","Chart","Chart.html#method-i-get_title","()","<p>Return title or ‘Untitled’\n"],["get_type_for_year","ReportsController","ReportsController.html#method-i-get_type_for_year","(type, year)",""],["group_filter=","ChartSeries","ChartSeries.html#method-i-group_filter-3D","(val)","<p>clear other values if we are changed\n"],["group_filter_enum","ChartSeries","ChartSeries.html#method-i-group_filter_enum","()","<p>group filter enumerator\n"],["group_name","MetaAttribute::MetaAttributeEntity","MetaAttribute/MetaAttributeEntity.html#method-i-group_name","()",""],["group_query_builder","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-group_query_builder","(group)","<p>Collect all of the columns that we need to select for this group\n"],["groups","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-groups","()","<p>Find the number of unique entity groups in all series\n"],["has_stats_view","ReportsHelper","ReportsHelper.html#method-i-has_stats_view","(_controller)",""],["import!","EdnaConsole::ArExtensions::ActiveRecordImport","EdnaConsole/ArExtensions/ActiveRecordImport.html#method-c-import-21","(record_list)",""],["index","ChartsController","ChartsController.html#method-i-index","()",""],["index","DashboardController","DashboardController.html#method-i-index","()",""],["index","ReportsController","ReportsController.html#method-i-index","()",""],["index","StatsController","StatsController.html#method-i-index","()",""],["indexes_of","EdnaConsole::DashboardLib::CollisionDetector","EdnaConsole/DashboardLib/CollisionDetector.html#method-i-indexes_of","(pos, sizex, sizey)","<p>return all of the indexes that are occupied by the  following rectangle\n"],["instrument","ReportsController","ReportsController.html#method-i-instrument","()",""],["iso_query_builder","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-iso_query_builder","()","<p>Query builder used when there is only a single data source\n"],["link_to_stats","ReportsHelper","ReportsHelper.html#method-i-link_to_stats","(_controller, _question_id = nil, _text = 'Show This Question on Original Survey Instrument')",""],["load_extensions","EdnaConsole::ArExtensions","EdnaConsole/ArExtensions.html#method-c-load_extensions","()",""],["load_extensions","EdnaConsole::RailsAdmin","EdnaConsole/RailsAdmin.html#method-c-load_extensions","()",""],["mark_as_freshly_created","DashboardWidget","DashboardWidget.html#method-i-mark_as_freshly_created","()","<p>Helper for view to determine if this element was just created\n"],["meta_attribute_questions","ChartSeries","ChartSeries.html#method-i-meta_attribute_questions","()",""],["model","MetaAttribute::MetaAttributeEntity","MetaAttribute/MetaAttributeEntity.html#method-i-model","()",""],["multi_query_builder","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-multi_query_builder","()","<p>Query builder used when there are multiple types of data sources\n"],["name","MetaAttribute::MetaAttributeEntity","MetaAttribute/MetaAttributeEntity.html#method-i-name","()",""],["name","MetaAttribute::MetaAttributeQuestion","MetaAttribute/MetaAttributeQuestion.html#method-i-name","()",""],["name","Version","Version.html#method-i-name","()",""],["nav_link_to","ApplicationHelper","ApplicationHelper.html#method-i-nav_link_to","(text, link, opts={})","<p>Link wrapped in li for use in the nav bar\n"],["new","Ability","Ability.html#method-c-new","(user)",""],["new","ChartsController","ChartsController.html#method-i-new","()",""],["new","DashboardWidgetsController","DashboardWidgetsController.html#method-i-new","()",""],["new","EdnaConsole::DashboardLib::CollisionDetector","EdnaConsole/DashboardLib/CollisionDetector.html#method-c-new","(opts={})","<p>Optionally set the maximum number of columns on 2d array\n"],["new","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-c-new","(user, questions)",""],["p4_program_id_enum","User","User.html#method-i-p4_program_id_enum","()",""],["p4_program_id_required?","User","User.html#method-i-p4_program_id_required-3F","()",""],["parent_group","MetaAttribute::MetaAttributeEntityGroup","MetaAttribute/MetaAttributeEntityGroup.html#method-i-parent_group","()",""],["parent_table_enum","MetaAttribute::MetaAttributeEntityGroup","MetaAttribute/MetaAttributeEntityGroup.html#method-i-parent_table_enum","()",""],["parent_table_pk_enum","MetaAttribute::MetaAttributeEntityGroup","MetaAttribute/MetaAttributeEntityGroup.html#method-i-parent_table_pk_enum","()",""],["percent_bar","ReportsHelper","ReportsHelper.html#method-i-percent_bar","(n, low, high, total_width, options = {})",""],["pk_join_arr","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-pk_join_arr","()","<p>Variables for primary key joins\n"],["pos_to_coord","EdnaConsole::DashboardLib::CollisionDetector","EdnaConsole/DashboardLib/CollisionDetector.html#method-i-pos_to_coord","(val)","<p>get the col and row of this position\n"],["position","DashboardWidget","DashboardWidget.html#method-i-position","()","<p>set default position to 1\n"],["public_file_path","ApplicationHelper","ApplicationHelper.html#method-i-public_file_path","(source)",""],["q_columns","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-q_columns","()","<p>get all of the column names (unique)\n"],["query_type","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-query_type","()","<p>Check query type\n"],["query_type_enum","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-query_type_enum","()","<p>Produce enumerator for query_type\n"],["query_type_str","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-query_type_str","()","<p>Convert the query_type to its string representation\n"],["question_details","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-question_details","()","<p>Show details for questions\n"],["question_filter=","ChartSeries","ChartSeries.html#method-i-question_filter-3D","(val)","<p>clear other values if we are changed\n"],["question_filter_enum","ChartSeries","ChartSeries.html#method-i-question_filter_enum","()",""],["questions","Chart","Chart.html#method-i-questions","()","<p>return all meta_attribute_questions associated with this chart\n"],["questions_for_entity","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-questions_for_entity","(entity)","<p>get all of the questions for this entity\n"],["questions_for_group","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-questions_for_group","(group)","<p>get all of the questions for this group\n"],["ready_for_data?","ChartSeries","ChartSeries.html#method-i-ready_for_data-3F","()","<p>is this series ready for a datapull?\n"],["reference_year_enum","MetaAttribute::MetaAttributeEntity","MetaAttribute/MetaAttributeEntity.html#method-i-reference_year_enum","()",""],["register_rectangle","EdnaConsole::DashboardLib::CollisionDetector","EdnaConsole/DashboardLib/CollisionDetector.html#method-i-register_rectangle","(pos, sizex, sizey, rid=1)","<p>Register a rectangle in the collision matrix (cm)\n<p>Returns: index of insertion point if succeeds\n<p>Or throws …\n"],["roles_enum","User","User.html#method-i-roles_enum","()",""],["rows","Chart","Chart.html#method-i-rows","()",""],["rows_enum","Chart","Chart.html#method-i-rows_enum","()","<p>Any listed question that is not in cols\n"],["select_arr","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-select_arr","()","<p>Variables for SELECT statement\n"],["serializable_hash","Chart","Chart.html#method-i-serializable_hash","(options={})","<p>customize serialized output for this model Will automatically show up on\nto_json, to_xml etc…\n"],["set_indecies","EdnaConsole::DashboardLib::CollisionDetector","EdnaConsole/DashboardLib/CollisionDetector.html#method-i-set_indecies","(indecies, rid=1)","<p>Set the value of these indecies to rid\n<p>Effectively take ownership of the indexes\n\n"],["show","ChartsController","ChartsController.html#method-i-show","()",""],["show","DashboardController","DashboardController.html#method-i-show","()",""],["show","ReportsController","ReportsController.html#method-i-show","()",""],["show","StatsController","StatsController.html#method-i-show","()",""],["show_stats","StatsHelper","StatsHelper.html#method-i-show_stats","(_attribute_name, _value, _params=nil)",""],["show_widget","DashboardWidgetsController","DashboardWidgetsController.html#method-i-show_widget","()",""],["status_classes","DashboardWidget","DashboardWidget.html#method-i-status_classes","()",""],["table_names","EdnaConsole::DataMaker","EdnaConsole/DataMaker.html#method-i-table_names","()","<p>List all of the table names associated with this data maker query\n"],["theme","Dashboard","Dashboard.html#method-i-theme","()",""],["theme_enum","Dashboard","Dashboard.html#method-i-theme_enum","()",""],["title","MetaAttribute::MetaAttributeEntityGroup","MetaAttribute/MetaAttributeEntityGroup.html#method-i-title","()",""],["title","P4Clinic","P4Clinic.html#method-i-title","()",""],["title","P4Program","P4Program.html#method-i-title","()",""],["title","User","User.html#method-i-title","()",""],["translate","MetaAttribute::MetaAttributeEntity","MetaAttribute/MetaAttributeEntity.html#method-i-translate","(row, cols = nil)","<p>Translate this record\n"],["update","ChartsController","ChartsController.html#method-i-update","()",""],["update","DashboardController","DashboardController.html#method-i-update","()",""],["update","DashboardWidgetsController","DashboardWidgetsController.html#method-i-update","()",""],["validate_max_number_of_groups","Chart","Chart.html#method-i-validate_max_number_of_groups","()",""],["validate_table_and_pk","MetaAttribute::MetaAttributeEntity","MetaAttribute/MetaAttributeEntity.html#method-i-validate_table_and_pk","()","<p>Require that table exists and that column exists in table\n"],["validate_table_and_pk","MetaAttribute::MetaAttributeEntityGroup","MetaAttribute/MetaAttributeEntityGroup.html#method-i-validate_table_and_pk","()","<p>Require that table exists and that column exists in table\n"],["validate_widget_positions","Dashboard","Dashboard.html#method-i-validate_widget_positions","()",""],["widget_id_enum","DashboardWidget","DashboardWidget.html#method-i-widget_id_enum","()",""],["widget_type_enum","DashboardWidget","DashboardWidget.html#method-i-widget_type_enum","()",""],["README","","README_rdoc.html","","<p>Edna Console\n"],["guides","","doc/guides_rdoc.html","","<p><strong>Date:</strong> 2014-08-19\n<p><strong>Author:</strong> Bill Hatt\n<p>Easily edit online at: github-preview.herokuapp.com/\n"],["rails","","doc/rails_rdoc.html","","<p>Welcome to Rails\n<p>Rails is a web-application framework that includes everything needed to\ncreate database-backed …\n"]]}}